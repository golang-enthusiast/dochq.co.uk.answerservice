{
  "swagger": "2.0",
  "info": {
    "title": "answers_service.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/answers": {
      "get": {
        "summary": "*\nReturns an answer by the provided key.\nIf the answer does not exist, an error \"Not found\" will be returned.",
        "operationId": "AnswerService_GetAnswer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAnswerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AnswerService"
        ]
      },
      "delete": {
        "summary": "*\nDeletes an existing answer.\nIf the answer does not exist, an error \"Not found\" will be returned.",
        "operationId": "AnswerService_DeleteAnswer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAnswerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AnswerService"
        ]
      },
      "post": {
        "summary": "*\nCreates a new answer.\nIf the answer exists, an error \"Already exists\" will be returned.",
        "operationId": "AnswerService_CreateAnswer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateAnswerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Answer"
            }
          }
        ],
        "tags": [
          "AnswerService"
        ]
      },
      "put": {
        "summary": "*\nUpdates an existing answer.\nIf the answer does not exist, an error \"Not found\" will be returned.",
        "operationId": "AnswerService_UpdateAnswer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateAnswerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Answer"
            }
          }
        ],
        "tags": [
          "AnswerService"
        ]
      }
    },
    "/v1/answers/{key}/history": {
      "get": {
        "summary": "*\nReturns an answer history by the provided key.\nIf the answer does not exist, an error \"Not found\" will be returned.",
        "operationId": "AnswerService_GetAnswerHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetAnswerHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AnswerService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Answer": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "*\nRepresents the answer model."
    },
    "v1AnswerEvent": {
      "type": "object",
      "properties": {
        "event_type": {
          "$ref": "#/definitions/v1AnswerEventType"
        },
        "data": {
          "$ref": "#/definitions/v1Answer"
        }
      },
      "description": "*\nRepresents the answer event model."
    },
    "v1AnswerEventType": {
      "type": "string",
      "enum": [
        "ANSWER_EVENT_TYPE_UNKNOWN",
        "ANSWER_EVENT_TYPE_CREATE",
        "ANSWER_EVENT_TYPE_UPDATE",
        "ANSWER_EVENT_TYPE_DELETE"
      ],
      "default": "ANSWER_EVENT_TYPE_UNKNOWN",
      "description": "*\nRepresents the answer event type."
    },
    "v1CreateAnswerResponse": {
      "type": "object"
    },
    "v1DeleteAnswerResponse": {
      "type": "object"
    },
    "v1GetAnswerHistoryResponse": {
      "type": "object",
      "properties": {
        "answer_events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AnswerEvent"
          }
        }
      }
    },
    "v1GetAnswerResponse": {
      "type": "object",
      "properties": {
        "answer": {
          "$ref": "#/definitions/v1Answer"
        }
      }
    },
    "v1UpdateAnswerResponse": {
      "type": "object"
    }
  }
}
