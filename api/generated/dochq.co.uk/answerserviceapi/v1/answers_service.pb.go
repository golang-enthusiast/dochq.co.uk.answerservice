// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: answers_service.proto

package v1

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer *Answer `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *CreateAnswerRequest) Reset() {
	*x = CreateAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answers_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnswerRequest) ProtoMessage() {}

func (x *CreateAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_answers_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnswerRequest.ProtoReflect.Descriptor instead.
func (*CreateAnswerRequest) Descriptor() ([]byte, []int) {
	return file_answers_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAnswerRequest) GetAnswer() *Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

type CreateAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateAnswerResponse) Reset() {
	*x = CreateAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answers_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAnswerResponse) ProtoMessage() {}

func (x *CreateAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_answers_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAnswerResponse.ProtoReflect.Descriptor instead.
func (*CreateAnswerResponse) Descriptor() ([]byte, []int) {
	return file_answers_service_proto_rawDescGZIP(), []int{1}
}

type UpdateAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer *Answer `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *UpdateAnswerRequest) Reset() {
	*x = UpdateAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answers_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnswerRequest) ProtoMessage() {}

func (x *UpdateAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_answers_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnswerRequest.ProtoReflect.Descriptor instead.
func (*UpdateAnswerRequest) Descriptor() ([]byte, []int) {
	return file_answers_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAnswerRequest) GetAnswer() *Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

type UpdateAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAnswerResponse) Reset() {
	*x = UpdateAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answers_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnswerResponse) ProtoMessage() {}

func (x *UpdateAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_answers_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnswerResponse.ProtoReflect.Descriptor instead.
func (*UpdateAnswerResponse) Descriptor() ([]byte, []int) {
	return file_answers_service_proto_rawDescGZIP(), []int{3}
}

type DeleteAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteAnswerRequest) Reset() {
	*x = DeleteAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answers_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnswerRequest) ProtoMessage() {}

func (x *DeleteAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_answers_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnswerRequest.ProtoReflect.Descriptor instead.
func (*DeleteAnswerRequest) Descriptor() ([]byte, []int) {
	return file_answers_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAnswerRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DeleteAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAnswerResponse) Reset() {
	*x = DeleteAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answers_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAnswerResponse) ProtoMessage() {}

func (x *DeleteAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_answers_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAnswerResponse.ProtoReflect.Descriptor instead.
func (*DeleteAnswerResponse) Descriptor() ([]byte, []int) {
	return file_answers_service_proto_rawDescGZIP(), []int{5}
}

type GetAnswerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetAnswerRequest) Reset() {
	*x = GetAnswerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answers_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnswerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerRequest) ProtoMessage() {}

func (x *GetAnswerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_answers_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerRequest.ProtoReflect.Descriptor instead.
func (*GetAnswerRequest) Descriptor() ([]byte, []int) {
	return file_answers_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetAnswerRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetAnswerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer *Answer `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *GetAnswerResponse) Reset() {
	*x = GetAnswerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answers_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerResponse) ProtoMessage() {}

func (x *GetAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_answers_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerResponse.ProtoReflect.Descriptor instead.
func (*GetAnswerResponse) Descriptor() ([]byte, []int) {
	return file_answers_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetAnswerResponse) GetAnswer() *Answer {
	if x != nil {
		return x.Answer
	}
	return nil
}

type GetAnswerHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetAnswerHistoryRequest) Reset() {
	*x = GetAnswerHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answers_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnswerHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerHistoryRequest) ProtoMessage() {}

func (x *GetAnswerHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_answers_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetAnswerHistoryRequest) Descriptor() ([]byte, []int) {
	return file_answers_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetAnswerHistoryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetAnswerHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerEvents []*AnswerEvent `protobuf:"bytes,1,rep,name=answer_events,json=answerEvents,proto3" json:"answer_events,omitempty"`
}

func (x *GetAnswerHistoryResponse) Reset() {
	*x = GetAnswerHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answers_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnswerHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerHistoryResponse) ProtoMessage() {}

func (x *GetAnswerHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_answers_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetAnswerHistoryResponse) Descriptor() ([]byte, []int) {
	return file_answers_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetAnswerHistoryResponse) GetAnswerEvents() []*AnswerEvent {
	if x != nil {
		return x.AnswerEvents
	}
	return nil
}

var File_answers_service_proto protoreflect.FileDescriptor

var file_answers_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2e, 0x64, 0x6f, 0x63, 0x68, 0x71, 0x2e, 0x63,
	0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x63, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4c, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x64, 0x6f, 0x63, 0x68, 0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x16,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4c, 0x0a,
	0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x64, 0x6f, 0x63, 0x68, 0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x16, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x16, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x61, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x64, 0x6f, 0x63, 0x68, 0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x2b, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x7a, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x64, 0x6f, 0x63, 0x68, 0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0xa5, 0x07, 0x0a, 0x0d, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb6, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x43, 0x2e, 0x64, 0x6f, 0x63, 0x68,
	0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44,
	0x2e, 0x64, 0x6f, 0x63, 0x68, 0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x0b, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x3a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x12, 0xb6, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x12, 0x43, 0x2e, 0x64, 0x6f, 0x63, 0x68, 0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b,
	0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x64, 0x6f, 0x63, 0x68, 0x71, 0x2e,
	0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x1a, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x73, 0x3a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0xae, 0x01, 0x0a, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x43, 0x2e, 0x64, 0x6f,
	0x63, 0x68, 0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x44, 0x2e, 0x64, 0x6f, 0x63, 0x68, 0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x2a, 0x0b,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x12, 0xa5, 0x01, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x40, 0x2e, 0x64, 0x6f, 0x63, 0x68,
	0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x64, 0x6f,
	0x63, 0x68, 0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x12, 0xc8, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x47, 0x2e, 0x64, 0x6f, 0x63, 0x68, 0x71,
	0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x48, 0x2e, 0x64, 0x6f, 0x63, 0x68, 0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2e,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x2f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x21,
	0x5a, 0x1f, 0x64, 0x6f, 0x63, 0x68, 0x71, 0x2e, 0x63, 0x6f, 0x2e, 0x75, 0x6b, 0x2f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_answers_service_proto_rawDescOnce sync.Once
	file_answers_service_proto_rawDescData = file_answers_service_proto_rawDesc
)

func file_answers_service_proto_rawDescGZIP() []byte {
	file_answers_service_proto_rawDescOnce.Do(func() {
		file_answers_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_answers_service_proto_rawDescData)
	})
	return file_answers_service_proto_rawDescData
}

var file_answers_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_answers_service_proto_goTypes = []interface{}{
	(*CreateAnswerRequest)(nil),      // 0: dochq.co.uk.answerservice.generated.service.v1.CreateAnswerRequest
	(*CreateAnswerResponse)(nil),     // 1: dochq.co.uk.answerservice.generated.service.v1.CreateAnswerResponse
	(*UpdateAnswerRequest)(nil),      // 2: dochq.co.uk.answerservice.generated.service.v1.UpdateAnswerRequest
	(*UpdateAnswerResponse)(nil),     // 3: dochq.co.uk.answerservice.generated.service.v1.UpdateAnswerResponse
	(*DeleteAnswerRequest)(nil),      // 4: dochq.co.uk.answerservice.generated.service.v1.DeleteAnswerRequest
	(*DeleteAnswerResponse)(nil),     // 5: dochq.co.uk.answerservice.generated.service.v1.DeleteAnswerResponse
	(*GetAnswerRequest)(nil),         // 6: dochq.co.uk.answerservice.generated.service.v1.GetAnswerRequest
	(*GetAnswerResponse)(nil),        // 7: dochq.co.uk.answerservice.generated.service.v1.GetAnswerResponse
	(*GetAnswerHistoryRequest)(nil),  // 8: dochq.co.uk.answerservice.generated.service.v1.GetAnswerHistoryRequest
	(*GetAnswerHistoryResponse)(nil), // 9: dochq.co.uk.answerservice.generated.service.v1.GetAnswerHistoryResponse
	(*Answer)(nil),                   // 10: dochq.co.uk.answerservice.generated.model.v1.Answer
	(*AnswerEvent)(nil),              // 11: dochq.co.uk.answerservice.generated.model.v1.AnswerEvent
}
var file_answers_service_proto_depIdxs = []int32{
	10, // 0: dochq.co.uk.answerservice.generated.service.v1.CreateAnswerRequest.answer:type_name -> dochq.co.uk.answerservice.generated.model.v1.Answer
	10, // 1: dochq.co.uk.answerservice.generated.service.v1.UpdateAnswerRequest.answer:type_name -> dochq.co.uk.answerservice.generated.model.v1.Answer
	10, // 2: dochq.co.uk.answerservice.generated.service.v1.GetAnswerResponse.answer:type_name -> dochq.co.uk.answerservice.generated.model.v1.Answer
	11, // 3: dochq.co.uk.answerservice.generated.service.v1.GetAnswerHistoryResponse.answer_events:type_name -> dochq.co.uk.answerservice.generated.model.v1.AnswerEvent
	0,  // 4: dochq.co.uk.answerservice.generated.service.v1.AnswerService.CreateAnswer:input_type -> dochq.co.uk.answerservice.generated.service.v1.CreateAnswerRequest
	2,  // 5: dochq.co.uk.answerservice.generated.service.v1.AnswerService.UpdateAnswer:input_type -> dochq.co.uk.answerservice.generated.service.v1.UpdateAnswerRequest
	4,  // 6: dochq.co.uk.answerservice.generated.service.v1.AnswerService.DeleteAnswer:input_type -> dochq.co.uk.answerservice.generated.service.v1.DeleteAnswerRequest
	6,  // 7: dochq.co.uk.answerservice.generated.service.v1.AnswerService.GetAnswer:input_type -> dochq.co.uk.answerservice.generated.service.v1.GetAnswerRequest
	8,  // 8: dochq.co.uk.answerservice.generated.service.v1.AnswerService.GetAnswerHistory:input_type -> dochq.co.uk.answerservice.generated.service.v1.GetAnswerHistoryRequest
	1,  // 9: dochq.co.uk.answerservice.generated.service.v1.AnswerService.CreateAnswer:output_type -> dochq.co.uk.answerservice.generated.service.v1.CreateAnswerResponse
	3,  // 10: dochq.co.uk.answerservice.generated.service.v1.AnswerService.UpdateAnswer:output_type -> dochq.co.uk.answerservice.generated.service.v1.UpdateAnswerResponse
	5,  // 11: dochq.co.uk.answerservice.generated.service.v1.AnswerService.DeleteAnswer:output_type -> dochq.co.uk.answerservice.generated.service.v1.DeleteAnswerResponse
	7,  // 12: dochq.co.uk.answerservice.generated.service.v1.AnswerService.GetAnswer:output_type -> dochq.co.uk.answerservice.generated.service.v1.GetAnswerResponse
	9,  // 13: dochq.co.uk.answerservice.generated.service.v1.AnswerService.GetAnswerHistory:output_type -> dochq.co.uk.answerservice.generated.service.v1.GetAnswerHistoryResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_answers_service_proto_init() }
func file_answers_service_proto_init() {
	if File_answers_service_proto != nil {
		return
	}
	file_answer_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_answers_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answers_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answers_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answers_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answers_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answers_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answers_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnswerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answers_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnswerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answers_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnswerHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answers_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnswerHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_answers_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_answers_service_proto_goTypes,
		DependencyIndexes: file_answers_service_proto_depIdxs,
		MessageInfos:      file_answers_service_proto_msgTypes,
	}.Build()
	File_answers_service_proto = out.File
	file_answers_service_proto_rawDesc = nil
	file_answers_service_proto_goTypes = nil
	file_answers_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AnswerServiceClient is the client API for AnswerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnswerServiceClient interface {
	//*
	// Creates a new answer.
	// If the answer exists, an error "Already exists" will be returned.
	CreateAnswer(ctx context.Context, in *CreateAnswerRequest, opts ...grpc.CallOption) (*CreateAnswerResponse, error)
	//*
	// Updates an existing answer.
	// If the answer does not exist, an error "Not found" will be returned.
	UpdateAnswer(ctx context.Context, in *UpdateAnswerRequest, opts ...grpc.CallOption) (*UpdateAnswerResponse, error)
	//*
	// Deletes an existing answer.
	// If the answer does not exist, an error "Not found" will be returned.
	DeleteAnswer(ctx context.Context, in *DeleteAnswerRequest, opts ...grpc.CallOption) (*DeleteAnswerResponse, error)
	//*
	// Returns an answer by the provided key.
	// If the answer does not exist, an error "Not found" will be returned.
	GetAnswer(ctx context.Context, in *GetAnswerRequest, opts ...grpc.CallOption) (*GetAnswerResponse, error)
	//*
	// Returns an answer history by the provided key.
	// If the answer does not exist, an error "Not found" will be returned.
	GetAnswerHistory(ctx context.Context, in *GetAnswerHistoryRequest, opts ...grpc.CallOption) (*GetAnswerHistoryResponse, error)
}

type answerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAnswerServiceClient(cc grpc.ClientConnInterface) AnswerServiceClient {
	return &answerServiceClient{cc}
}

func (c *answerServiceClient) CreateAnswer(ctx context.Context, in *CreateAnswerRequest, opts ...grpc.CallOption) (*CreateAnswerResponse, error) {
	out := new(CreateAnswerResponse)
	err := c.cc.Invoke(ctx, "/dochq.co.uk.answerservice.generated.service.v1.AnswerService/CreateAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *answerServiceClient) UpdateAnswer(ctx context.Context, in *UpdateAnswerRequest, opts ...grpc.CallOption) (*UpdateAnswerResponse, error) {
	out := new(UpdateAnswerResponse)
	err := c.cc.Invoke(ctx, "/dochq.co.uk.answerservice.generated.service.v1.AnswerService/UpdateAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *answerServiceClient) DeleteAnswer(ctx context.Context, in *DeleteAnswerRequest, opts ...grpc.CallOption) (*DeleteAnswerResponse, error) {
	out := new(DeleteAnswerResponse)
	err := c.cc.Invoke(ctx, "/dochq.co.uk.answerservice.generated.service.v1.AnswerService/DeleteAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *answerServiceClient) GetAnswer(ctx context.Context, in *GetAnswerRequest, opts ...grpc.CallOption) (*GetAnswerResponse, error) {
	out := new(GetAnswerResponse)
	err := c.cc.Invoke(ctx, "/dochq.co.uk.answerservice.generated.service.v1.AnswerService/GetAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *answerServiceClient) GetAnswerHistory(ctx context.Context, in *GetAnswerHistoryRequest, opts ...grpc.CallOption) (*GetAnswerHistoryResponse, error) {
	out := new(GetAnswerHistoryResponse)
	err := c.cc.Invoke(ctx, "/dochq.co.uk.answerservice.generated.service.v1.AnswerService/GetAnswerHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnswerServiceServer is the server API for AnswerService service.
type AnswerServiceServer interface {
	//*
	// Creates a new answer.
	// If the answer exists, an error "Already exists" will be returned.
	CreateAnswer(context.Context, *CreateAnswerRequest) (*CreateAnswerResponse, error)
	//*
	// Updates an existing answer.
	// If the answer does not exist, an error "Not found" will be returned.
	UpdateAnswer(context.Context, *UpdateAnswerRequest) (*UpdateAnswerResponse, error)
	//*
	// Deletes an existing answer.
	// If the answer does not exist, an error "Not found" will be returned.
	DeleteAnswer(context.Context, *DeleteAnswerRequest) (*DeleteAnswerResponse, error)
	//*
	// Returns an answer by the provided key.
	// If the answer does not exist, an error "Not found" will be returned.
	GetAnswer(context.Context, *GetAnswerRequest) (*GetAnswerResponse, error)
	//*
	// Returns an answer history by the provided key.
	// If the answer does not exist, an error "Not found" will be returned.
	GetAnswerHistory(context.Context, *GetAnswerHistoryRequest) (*GetAnswerHistoryResponse, error)
}

// UnimplementedAnswerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAnswerServiceServer struct {
}

func (*UnimplementedAnswerServiceServer) CreateAnswer(context.Context, *CreateAnswerRequest) (*CreateAnswerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAnswer not implemented")
}
func (*UnimplementedAnswerServiceServer) UpdateAnswer(context.Context, *UpdateAnswerRequest) (*UpdateAnswerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAnswer not implemented")
}
func (*UnimplementedAnswerServiceServer) DeleteAnswer(context.Context, *DeleteAnswerRequest) (*DeleteAnswerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAnswer not implemented")
}
func (*UnimplementedAnswerServiceServer) GetAnswer(context.Context, *GetAnswerRequest) (*GetAnswerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAnswer not implemented")
}
func (*UnimplementedAnswerServiceServer) GetAnswerHistory(context.Context, *GetAnswerHistoryRequest) (*GetAnswerHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAnswerHistory not implemented")
}

func RegisterAnswerServiceServer(s *grpc.Server, srv AnswerServiceServer) {
	s.RegisterService(&_AnswerService_serviceDesc, srv)
}

func _AnswerService_CreateAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAnswerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnswerServiceServer).CreateAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dochq.co.uk.answerservice.generated.service.v1.AnswerService/CreateAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnswerServiceServer).CreateAnswer(ctx, req.(*CreateAnswerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnswerService_UpdateAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAnswerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnswerServiceServer).UpdateAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dochq.co.uk.answerservice.generated.service.v1.AnswerService/UpdateAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnswerServiceServer).UpdateAnswer(ctx, req.(*UpdateAnswerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnswerService_DeleteAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAnswerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnswerServiceServer).DeleteAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dochq.co.uk.answerservice.generated.service.v1.AnswerService/DeleteAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnswerServiceServer).DeleteAnswer(ctx, req.(*DeleteAnswerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnswerService_GetAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAnswerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnswerServiceServer).GetAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dochq.co.uk.answerservice.generated.service.v1.AnswerService/GetAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnswerServiceServer).GetAnswer(ctx, req.(*GetAnswerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnswerService_GetAnswerHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAnswerHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnswerServiceServer).GetAnswerHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dochq.co.uk.answerservice.generated.service.v1.AnswerService/GetAnswerHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnswerServiceServer).GetAnswerHistory(ctx, req.(*GetAnswerHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnswerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dochq.co.uk.answerservice.generated.service.v1.AnswerService",
	HandlerType: (*AnswerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAnswer",
			Handler:    _AnswerService_CreateAnswer_Handler,
		},
		{
			MethodName: "UpdateAnswer",
			Handler:    _AnswerService_UpdateAnswer_Handler,
		},
		{
			MethodName: "DeleteAnswer",
			Handler:    _AnswerService_DeleteAnswer_Handler,
		},
		{
			MethodName: "GetAnswer",
			Handler:    _AnswerService_GetAnswer_Handler,
		},
		{
			MethodName: "GetAnswerHistory",
			Handler:    _AnswerService_GetAnswerHistory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "answers_service.proto",
}
